#!/usr/bin/env ruby

# Code based on gist supplied by Alban Peignier (http://gist.github.com/379361)

require 'rubygems'
require 'jekyll'

require File.join(File.dirname(__FILE__), '..', 'lib', 'aop.rb')

module Kernel
  # From http://mentalized.net/journal/2010/04/02/suppress_warnings_from_ruby/
  def suppress_warnings
    original_verbosity = $VERBOSE
    $VERBOSE = nil
    result = yield
    $VERBOSE = original_verbosity
    return result
  end
end

module Jekyll
  # For jekyll versions above 0.6.2 (inclusive)
  if const_defined? :VERSION
    suppress_warnings { VERSION = VERSION + " (Extended)" }
  end

  class << self
    alias_method :configuration_without_extensions, :configuration
    def configuration_with_extensions(options)
      options = configuration_without_extensions(options)
      Dir[File.join(options['source'], "_extensions", "*.rb"), File.join(options['source'], "_extensions", "*", "*.rb")].each do |f|
        puts "Loading Extension: #{File.basename(f)}"
        load f
      end
      options
    end
    alias_method :configuration, :configuration_with_extensions

    # For jekyll versions below 0.6.2 (exclusive)
    if method_defined? :version
      alias_method :original_version, :version
      def version
        original_version + " (Extended)"
      end
    end

  end

end

original_jekyll = ENV['PATH'].split(File::PATH_SEPARATOR).collect { |d| "#{d}/jekyll" }.find{ |p| File.exists?(p) }
load original_jekyll
